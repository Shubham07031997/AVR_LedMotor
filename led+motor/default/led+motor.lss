
led+motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001f4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000005a8  00000000  00000000  00000283  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e6  00000000  00000000  0000082b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000449  00000000  00000000  00000911  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000d5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000cb  00000000  00000000  00000d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000350  00000000  00000000  00000e47  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00001197  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ef       	ldi	r30, 0xF4	; 244
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:
#include<avr/io.h>
#define F_CPU 8000000
#include<util/delay.h>
void main()
{
  92:	9f 92       	push	r9
  94:	af 92       	push	r10
  96:	bf 92       	push	r11
  98:	cf 92       	push	r12
  9a:	df 92       	push	r13
  9c:	ef 92       	push	r14
  9e:	ff 92       	push	r15
  a0:	0f 93       	push	r16
  a2:	1f 93       	push	r17
   DDRA=0xff;
  a4:	8f ef       	ldi	r24, 0xFF	; 255
  a6:	8a bb       	out	0x1a, r24	; 26
   DDRC=0xff;
  a8:	84 bb       	out	0x14, r24	; 20

   while(1)
   {
       PORTA=0b10000000;
  aa:	40 e8       	ldi	r20, 0x80	; 128
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  ac:	28 ec       	ldi	r18, 0xC8	; 200
  ae:	30 e0       	ldi	r19, 0x00	; 0
	   PORTC=0b10000000;
	   _delay_ms(50);
	   PORTC=0b11000000;
  b0:	f0 ec       	ldi	r31, 0xC0	; 192
  b2:	9f 2e       	mov	r9, r31
	   _delay_ms(50);
	   PORTC=0b11100000;
  b4:	e0 ee       	ldi	r30, 0xE0	; 224
  b6:	be 2e       	mov	r11, r30
	   _delay_ms(50);
	   PORTC=0b11110000;
  b8:	70 ef       	ldi	r23, 0xF0	; 240
  ba:	a7 2e       	mov	r10, r23
	   _delay_ms(50);
	   PORTC=0b11111000;
  bc:	68 ef       	ldi	r22, 0xF8	; 248
  be:	d6 2e       	mov	r13, r22
	   _delay_ms(50);
	   PORTC=0b11111100;
  c0:	5c ef       	ldi	r21, 0xFC	; 252
  c2:	c5 2e       	mov	r12, r21
	   _delay_ms(50);
	   PORTC=0b11111110;
  c4:	9e ef       	ldi	r25, 0xFE	; 254
  c6:	e9 2e       	mov	r14, r25
	   _delay_ms(50);
	   PORTC=0b11111111;
  c8:	5f ef       	ldi	r21, 0xFF	; 255
	   _delay_ms(50);
	   PORTC=0b00000000;
	   _delay_ms(100);
	   PORTA=0b01000000;
  ca:	80 e4       	ldi	r24, 0x40	; 64
  cc:	f8 2e       	mov	r15, r24
	   PORTC=0b10000000;
	   _delay_ms(50);
	   PORTC=0b10000001;
  ce:	11 e8       	ldi	r17, 0x81	; 129
	   _delay_ms(50);
	   PORTC=0b10000011;
  d0:	03 e8       	ldi	r16, 0x83	; 131
	   _delay_ms(50);
	   PORTC=0b10000111;
  d2:	b7 e8       	ldi	r27, 0x87	; 135
	   _delay_ms(50);
	   PORTC=0b10001111;
  d4:	7f e8       	ldi	r23, 0x8F	; 143
	   _delay_ms(50);
	   PORTC=0b10011111;
  d6:	af e9       	ldi	r26, 0x9F	; 159
	   _delay_ms(50);
	   PORTC=0b10111111;
  d8:	6f eb       	ldi	r22, 0xBF	; 191
   DDRA=0xff;
   DDRC=0xff;

   while(1)
   {
       PORTA=0b10000000;
  da:	4b bb       	out	0x1b, r20	; 27
	   PORTC=0b10000000;
  dc:	45 bb       	out	0x15, r20	; 21
  de:	84 ef       	ldi	r24, 0xF4	; 244
  e0:	91 e0       	ldi	r25, 0x01	; 1
  e2:	f9 01       	movw	r30, r18
  e4:	31 97       	sbiw	r30, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <main+0x52>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  e8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ea:	d9 f7       	brne	.-10     	; 0xe2 <main+0x50>
	   _delay_ms(50);
	   PORTC=0b11000000;
  ec:	95 ba       	out	0x15, r9	; 21
  ee:	84 ef       	ldi	r24, 0xF4	; 244
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	f9 01       	movw	r30, r18
  f4:	31 97       	sbiw	r30, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <main+0x62>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  f8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  fa:	d9 f7       	brne	.-10     	; 0xf2 <main+0x60>
	   _delay_ms(50);
	   PORTC=0b11100000;
  fc:	b5 ba       	out	0x15, r11	; 21
  fe:	84 ef       	ldi	r24, 0xF4	; 244
 100:	91 e0       	ldi	r25, 0x01	; 1
 102:	f9 01       	movw	r30, r18
 104:	31 97       	sbiw	r30, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <main+0x72>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 108:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 10a:	d9 f7       	brne	.-10     	; 0x102 <main+0x70>
	   _delay_ms(50);
	   PORTC=0b11110000;
 10c:	a5 ba       	out	0x15, r10	; 21
 10e:	84 ef       	ldi	r24, 0xF4	; 244
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	f9 01       	movw	r30, r18
 114:	31 97       	sbiw	r30, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <main+0x82>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 118:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 11a:	d9 f7       	brne	.-10     	; 0x112 <main+0x80>
	   _delay_ms(50);
	   PORTC=0b11111000;
 11c:	d5 ba       	out	0x15, r13	; 21
 11e:	84 ef       	ldi	r24, 0xF4	; 244
 120:	91 e0       	ldi	r25, 0x01	; 1
 122:	f9 01       	movw	r30, r18
 124:	31 97       	sbiw	r30, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <main+0x92>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 128:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 12a:	d9 f7       	brne	.-10     	; 0x122 <main+0x90>
	   _delay_ms(50);
	   PORTC=0b11111100;
 12c:	c5 ba       	out	0x15, r12	; 21
 12e:	84 ef       	ldi	r24, 0xF4	; 244
 130:	91 e0       	ldi	r25, 0x01	; 1
 132:	f9 01       	movw	r30, r18
 134:	31 97       	sbiw	r30, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <main+0xa2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 138:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 13a:	d9 f7       	brne	.-10     	; 0x132 <main+0xa0>
	   _delay_ms(50);
	   PORTC=0b11111110;
 13c:	e5 ba       	out	0x15, r14	; 21
 13e:	84 ef       	ldi	r24, 0xF4	; 244
 140:	91 e0       	ldi	r25, 0x01	; 1
 142:	f9 01       	movw	r30, r18
 144:	31 97       	sbiw	r30, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <main+0xb2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 148:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 14a:	d9 f7       	brne	.-10     	; 0x142 <main+0xb0>
	   _delay_ms(50);
	   PORTC=0b11111111;
 14c:	55 bb       	out	0x15, r21	; 21
 14e:	84 ef       	ldi	r24, 0xF4	; 244
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	f9 01       	movw	r30, r18
 154:	31 97       	sbiw	r30, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0xc2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 158:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 15a:	d9 f7       	brne	.-10     	; 0x152 <main+0xc0>
	   _delay_ms(50);
	   PORTC=0b00000000;
 15c:	15 ba       	out	0x15, r1	; 21
 15e:	88 ee       	ldi	r24, 0xE8	; 232
 160:	93 e0       	ldi	r25, 0x03	; 3
 162:	f9 01       	movw	r30, r18
 164:	31 97       	sbiw	r30, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <main+0xd2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 168:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 16a:	d9 f7       	brne	.-10     	; 0x162 <main+0xd0>
	   _delay_ms(100);
	   PORTA=0b01000000;
 16c:	fb ba       	out	0x1b, r15	; 27
	   PORTC=0b10000000;
 16e:	45 bb       	out	0x15, r20	; 21
 170:	84 ef       	ldi	r24, 0xF4	; 244
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	f9 01       	movw	r30, r18
 176:	31 97       	sbiw	r30, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <main+0xe4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 17a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 17c:	d9 f7       	brne	.-10     	; 0x174 <main+0xe2>
	   _delay_ms(50);
	   PORTC=0b10000001;
 17e:	15 bb       	out	0x15, r17	; 21
 180:	84 ef       	ldi	r24, 0xF4	; 244
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	f9 01       	movw	r30, r18
 186:	31 97       	sbiw	r30, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <main+0xf4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 18a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 18c:	d9 f7       	brne	.-10     	; 0x184 <main+0xf2>
	   _delay_ms(50);
	   PORTC=0b10000011;
 18e:	05 bb       	out	0x15, r16	; 21
 190:	84 ef       	ldi	r24, 0xF4	; 244
 192:	91 e0       	ldi	r25, 0x01	; 1
 194:	f9 01       	movw	r30, r18
 196:	31 97       	sbiw	r30, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <main+0x104>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 19a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 19c:	d9 f7       	brne	.-10     	; 0x194 <main+0x102>
	   _delay_ms(50);
	   PORTC=0b10000111;
 19e:	b5 bb       	out	0x15, r27	; 21
 1a0:	84 ef       	ldi	r24, 0xF4	; 244
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	f9 01       	movw	r30, r18
 1a6:	31 97       	sbiw	r30, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x114>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1aa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1ac:	d9 f7       	brne	.-10     	; 0x1a4 <main+0x112>
	   _delay_ms(50);
	   PORTC=0b10001111;
 1ae:	75 bb       	out	0x15, r23	; 21
 1b0:	84 ef       	ldi	r24, 0xF4	; 244
 1b2:	91 e0       	ldi	r25, 0x01	; 1
 1b4:	f9 01       	movw	r30, r18
 1b6:	31 97       	sbiw	r30, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <main+0x124>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ba:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1bc:	d9 f7       	brne	.-10     	; 0x1b4 <main+0x122>
	   _delay_ms(50);
	   PORTC=0b10011111;
 1be:	a5 bb       	out	0x15, r26	; 21
 1c0:	84 ef       	ldi	r24, 0xF4	; 244
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	f9 01       	movw	r30, r18
 1c6:	31 97       	sbiw	r30, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <main+0x134>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ca:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1cc:	d9 f7       	brne	.-10     	; 0x1c4 <main+0x132>
	   _delay_ms(50);
	   PORTC=0b10111111;
 1ce:	65 bb       	out	0x15, r22	; 21
 1d0:	84 ef       	ldi	r24, 0xF4	; 244
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	f9 01       	movw	r30, r18
 1d6:	31 97       	sbiw	r30, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <main+0x144>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1da:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1dc:	d9 f7       	brne	.-10     	; 0x1d4 <main+0x142>
	   _delay_ms(50);
	   PORTC=0b11111111;
 1de:	55 bb       	out	0x15, r21	; 21
 1e0:	84 ef       	ldi	r24, 0xF4	; 244
 1e2:	91 e0       	ldi	r25, 0x01	; 1
 1e4:	f9 01       	movw	r30, r18
 1e6:	31 97       	sbiw	r30, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <main+0x154>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ea:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1ec:	d9 f7       	brne	.-10     	; 0x1e4 <main+0x152>
 1ee:	75 cf       	rjmp	.-278    	; 0xda <main+0x48>

000001f0 <_exit>:
 1f0:	f8 94       	cli

000001f2 <__stop_program>:
 1f2:	ff cf       	rjmp	.-2      	; 0x1f2 <__stop_program>
